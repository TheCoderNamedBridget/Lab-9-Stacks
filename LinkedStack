import java.awt.Point;

/**
 * @author Mrs.Cleary
 */


public class LinkedStack {

	private static class Node {

		private Point data;

		private Node next;

		public Node(Point d, Node n) {
			data = d;
			next = n;
		}

//		public Point toString() {
//			return data;
//		}
	}

	private Node top;

	public LinkedStack() {

		top = null;

	}

	public boolean isEmpty() {

		return top == null;

	}

	public void push(Point s) {
		top = new Node(s, top);
	}

	public Point pop() {
		
		Point retVal = null;
		
		if (!isEmpty()) {
			
			retVal = top.data;
			top = top.next;
		}
		return retVal;
	}

	public Point peek() {
		
		Point retVal = null;
		if (!isEmpty()) {
			retVal = top.data;
		}
		return retVal;
	}

	public String toString() {
		
		String s = "";
		Node n = top;
		while (n != null) {
			s = s + n.data + " ";
			n = n.next;
		}
		return s;
	}

	public int size() {
		
		int count = 0;
		Node n = top;
		while (n != null) {
			count++;
			n = n.next;
		}
		return count;
	}
}
